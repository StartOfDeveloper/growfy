Html code!
<div class="swiper">
            <div class="swiper-wrapper">
              <div class="swiper-slide"><img src="img/1.jpg" alt="Eror"></div>
              <div class="swiper-slide"><img src="img/2.jpg" alt="Eror"></div>
              <div class="swiper-slide"><img src="img/3.jpg" alt="Eror"></div>
              <div class="swiper-slide"><img src="img/4.jpg" alt="Eror"></div>
              <div class="swiper-slide"><img src="img/5.jpg" alt="Eror"></div>
            </div>
            <div class="swiper-pagination"></div>
            <div class="swiper-button-prev"></div>
            <div class="swiper-button-next"></div>
            <div class="swiper-scrollbar"></div>
        </div>
///////////////////////////////////////////////////////////////////////////////////////////////////////
Инициализировать Swiper
Теперь, когда у нас есть HTML-код Swiper, нам нужно инициализировать его с помощью следующей функции:

new Swiper (swiperContainer, параметры) — инициализировать swiper с параметрами

1.swiperContainer — HTMLElement или строка (с селектором CSS) HTML-элемента контейнера swiper. Необходимый.
2.параметры - объект - объект с параметрами Swiper. Необязательный.
3.Метод возвращает инициализированный экземпляр Swiper
Например:

const swiper = new Swiper('.swiper', {
  speed: 400,
  spaceBetween: 100,
});
После инициализации Swiper можно получить доступ к экземпляру Swiper на его HTMLElement. Это swiperсвойство элемента HTML-контейнера Swiper:

const swiper = document.querySelector('.swiper').swiper;

// Now you can use all slider methods like
swiper.slideNext();
/////////////////////////////////////////////////////////////////////////////////////////////////////////
Параметры
Давайте посмотрим на список всех доступных параметров:


Имя		Тип	По умолчанию
allowSlideNext	boolean	true	
Установите falseдля отключения перехода к следующему направлению слайда (вправо или вниз)

allowSlidePrev	boolean	true	
Установите, falseчтобы отключить прокрутку к предыдущему направлению слайда (влево или вверх)

allowTouchMove	boolean	true	
Если false, то единственный способ переключить слайд — использовать внешние функции API, такие как slidePrev или slideNext.

autoHeight	boolean	false	
Eстановите значение true, и обертка ползунка адаптирует свою высоту к высоте текущего активного слайда.

breakpoints	object		
Позволяет установить разные параметры для разных контрольных точек (размеров экрана). 
В точках останова можно изменить не все параметры, а только те, которые не требуют другой схемы и логики, например slidesPerView, slidesPerGroup, spaceBetween, grid.rows.
 Такие параметры вроде loopи effect не подойдут
const swiper = new Swiper('.swiper', {
  // Default parameters
  slidesPerView: 1,
  spaceBetween: 10,
  // Responsive breakpoints
  breakpoints: {
    // when window width is >= 320px
    320: {
      slidesPerView: 2,
      spaceBetween: 20
    },
    // when window width is >= 480px
    480: {
      slidesPerView: 3,
      spaceBetween: 30
    },
    // when window width is >= 640px
    640: {
      slidesPerView: 4,
      spaceBetween: 40
    }
  }
})
const swiper = new Swiper('.swiper', {
  slidesPerView: 1,
  spaceBetween: 10,
  // using "ratio" endpoints
  breakpoints: {
    '@0.75': {
      slidesPerView: 2,
      spaceBetween: 20,
    },
    '@1.00': {
      slidesPerView: 3,
      spaceBetween: 40,
    },
    '@1.50': {
      slidesPerView: 4,
      spaceBetween: 50,
    },
  }
});
breakpointsBase	string	'window'	
База для точек останова (бета). 
Можно windowили container. 
Если установлено window(по умолчанию), то ключи точки останова означают ширину окна. 
Если установлено, containerто ключи точки останова обрабатываются как ширина контейнера swiper

!В настоящее время находится в стадии бета-тестирования и не поддерживается компонентами Swiper React и Vue.!

centerInsufficientSlides	boolean	false	
При включении он центрирует слайды, если количество слайдов меньше slidesPerView.
Не предназначен для использования loop в режиме и grid.rows

centeredSlides	boolean	false	
Если true, то активный слайд будет центрирован, а не всегда слева.

centeredSlidesBounds	boolean	false	
Если true, то активный слайд будет центрирован без добавления пробелов в начале и конце слайдера. 
Требуется centeredSlides: true. Не предназначен для использования с loop или pagination

containerModifierClass	string	'swiper-'	
Начало CSS-класса модификатора, который можно добавить в контейнер swiper в зависимости от различных параметров.

createElements	boolean	false	
Когда включено, Swiper автоматически оборачивает слайды элементом swiper-wrapper и создает необходимые элементы для навигации, 
разбивки на страницы и полосы прокрутки, если они включены (с соответствующим объектом params или с логическим значением) true).

cssMode	boolean	false	
Когда он включен, он будет использовать современный CSS Scroll Snap API. Он не поддерживает все функции Swiper, но потенциально должен обеспечить гораздо лучшую производительность в простых конфигурациях.

Это то, что не поддерживается, когда оно включено:

Эффект куба
speedпараметр может не иметь никакого эффекта
Все события, связанные с началом/концом перехода (используйте slideChangeвместо этого)
slidesPerGroupимеет ограниченную поддержку
simulateTouchне действует и "перетаскивание" мышью не работает
resistanceне имеет никакого эффекта
allowSlidePrev/Next
swipeHandler
freeModeи все соответствующие функции
В случае, если вы используете его с другими эффектами, особенно 3D-эффектами, необходимо обернуть содержимое слайда элементом <div className="swiper-slide-transform">. 
И если вы используете какие-либо пользовательские стили на слайдах (например, цвета фона, радиус границы, граница и т. д.), вместо этого они должны быть установлены для swiper-slide-transform элемента.
@example
<div class="swiper">
  <div class="swiper-wrapper">
    <div class="swiper-slide">
      <!-- wrap slide content with transform element -->
      <div class="swiper-slide">
        ... slide content ...
      </div>
    </div>
    ...
  </div>
</div>
<script>
const swiper = new Swiper('.swiper', {
   effect: 'flip',
   cssMode: true,
 });
</script>

direction	'horizontal' | 'vertical'	'horizontal'	
Может быть 'horizontal' или 'vertical'(для вертикального слайдера).

edgeSwipeDetection	string | boolean	false	
Включите, чтобы выпускать события Swiper для работы с прокруткой назад в приложении. Если установлено, 'prevent'это предотвратит навигацию по системе.

edgeSwipeThreshold	number	20	
Область (в пикселях) от левого края экрана для запуска сенсорных событий для прокрутки назад в приложении.

effect	'slide' | 'fade' | 'cube' | 'coverflow' | 'flip' | 'creative' | 'cards'	'slide'	
Эффект перехода. Может быть 'slide', 'fade', 'cube', или'coverflow''flip''creative'.

enabled		boolean	true	
Был ли изначально включен Swiper. Когда Swiper отключен, он скроет все элементы навигации и не будет реагировать ни на какие события и взаимодействия.

focusableElements	string	'input, select, option, textarea, button, video, label'	
Селектор CSS для фокусируемых элементов. Смахивание будет отключено для таких элементов, если они «сфокусированы»

followFinger	boolean	true	
Если отключено, то слайдер будет анимироваться только тогда, когда вы его отпустите, он не будет двигаться, пока вы держите на нем палец

grabCursor	boolean	false	
Эта опция может немного улучшить удобство использования рабочего стола. Если true, пользователь увидит курсор «захватить» при наведении на Swiper.

height	null | number	null	
Высота пролистывания (в пикселях). Параметр позволяет задать высоту Swiper. Полезно, только если вы инициализируете Swiper, когда он скрыт, а также в средах SSR и Test для правильной инициализации Swiper.

становка этого параметра приведет к тому, что Swiper не будет реагировать!

init	boolean	true	
Должен ли Swiper инициализироваться автоматически при создании экземпляра. Если отключено, то вам нужно инициировать его вручную, вызвавswiper.init()

initialSlide	number	0	
Индексный номер начального слайда.

injectStyles	string[]		
Внедрить стили текста в теневой DOM. Только для использования с Swiper Element

injectStylesUrls	string[]		
Внедрить стили <link>в теневой DOM. Только для использования с Swiper Element

lazyPreloaderClass	string	'swiper-lazy-preloader'	
Имя класса CSS ленивого предварительного загрузчика

longSwipes	boolean	true	
Установите, false если хотите отключить длинные свайпы

longSwipesMs	number	300	
Минимальная продолжительность (в мс) для перехода к следующему/предыдущему слайду при длительном смахивании.

longSwipesRatio	number	0.5	
Соотношение для перехода к следующему/предыдущему слайду при длительном смахивании

loop	boolean	false	
Установите, trueчтобы включить режим непрерывного цикла

Из-за того, как работает циклический режим, он добавит перестановку слайдов.

loopPreventsSliding	boolean	true	
Если включено, то slideNext/Prev ничего не будет делать, пока слайдер анимируется в циклическом режиме.

loopedSlides	null | number	null	
Определяет, сколько слайдов перед концом/началом должно переставлять (зацикливать) слайды. Если не указано, по умолчанию slidesPerView.

maxBackfaceHiddenSlides	number	10	
Если общее количество слайдов меньше указанного здесь значения, то Swiper включит backface-visibility: hiddenэлементы слайда для уменьшения визуального «мерцания» в Safari.

Не рекомендуется включать его на большом количестве слайдов, так как это снизит производительность.

modules	SwiperModule[]		
Массив с модулями Swiper

import Swiper, { Navigation, Pagination } from 'swiper';

const swiper = new Swiper('.swiper', {
   modules: [ Navigation, Pagination ],
 });

nested	boolean	false	
Установите trueна Swiper для корректного перехвата сенсорных событий. Используйте только на свайпах, которые используют то же направление, что и родительский.

noSwiping	boolean	true	
Включить/отключить пролистывание элементов, соответствующих классу, указанному вnoSwipingClass.

noSwipingClass	string	'swiper-no-swiping'	
Укажите noSwipingкласс элемента css

noSwipingSelector	string		
Может использоваться вместо noSwipingClassуказания элементов для отключения пролистывания. Например, 'input'отключит смахивание на всех входах.

normalizeSlideIndex	boolean	true	
Нормализация индекса слайдов.

observeParents	boolean	false	
Установите, trueесли вам также нужно смотреть Mutations для родительских элементов Swiper.

observeSlideChildren	boolean	false	
Set to true if you also need to watch Mutations for Swiper slide children elements

observer	boolean	false	
Установите, trueчтобы включить Mutation Observer для Swiper и его элементов. В этом случае Swiper будет обновляться (повторно инициализироваться) каждый раз, когда вы меняете его стиль (например, скрытие/отображение) или изменяете его дочерние элементы (например, добавляете/удаляете слайды).

on	object		
Зарегистрировать обработчики событий.

oneWayMovement	boolean	false	
Если этот параметр включен, слайды будут пролистываться только вперед (в одну сторону) независимо от направления пролистывания.

passiveListeners	boolean	true	
Пассивные прослушиватели событий будут использоваться по умолчанию, где это возможно, чтобы улучшить производительность прокрутки на мобильных устройствах. Но если вам нужно использовать e.preventDefaultи у вас с ним конфликт, то стоит отключить этот параметр.

preventClicks	boolean	true	
Установите trueдля предотвращения случайных нежелательных кликов по ссылкам во время прокрутки.

preventClicksPropagation	boolean	true	
Установите, чтобы trueостановить распространение событий кликов по ссылкам во время прокрутки.

preventInteractionOnTransition	boolean	false	
Когда он включен, он не позволит менять слайды с помощью прокрутки или кнопок навигации / разбиения на страницы во время перехода.

resistance	boolean	true	
Установите, false если вы хотите отключить устойчивые границы.

resistanceRatio	number	0.85	
Эта опция позволяет вам контролировать коэффициент сопротивления.

resizeObserver	boolean	true	
Когда он включен, он будет использовать ResizeObserver (если поддерживается браузером) в контейнере swiper для обнаружения изменения размера контейнера (вместо наблюдения за изменением размера окна).

rewind	boolean	false	
Когда он включен, он будет использовать ResizeObserver (если поддерживается браузером) в контейнере swiper для обнаружения изменения размера контейнера (вместо наблюдения за изменением размера окна).

Не следует использовать вместе с loop режимом!

roundLengths	boolean	false	
Установите для true округления значений ширины и высоты слайдов, чтобы предотвратить размытие текста на экранах с обычным разрешением (если они у вас есть).

runCallbacksOnInit	boolean	true	
События Fire Transition/SlideChange/Start/End при инициализации swiper. Такие события будут запускаться при инициализации, если ваш initialSlide не равен 0 или вы используете режим цикла.

setWrapperSize	boolean	false	
Включите эту опцию, и плагин установит ширину/высоту на обертке swiper, равную общему размеру всех слайдов. В основном следует использовать в качестве резервного варианта совместимости для браузеров, которые плохо поддерживают макет flexbox.

shortSwipes	boolean	true	
Установите, falseесли хотите отключить короткие свайпы

simulateTouch	boolean	true	
Если true, Swiper будет принимать события мыши, такие как события касания (щелкните и перетащите, чтобы сменить слайды).

slideActiveClass	string	'swiper-slide-active'	
Имя класса CSS текущего активного слайда

При изменении классов вам также потребуется изменить CSS Swiper, чтобы отразить измененные классы.

Не поддерживается в компонентах Swiper React/Vue.

slideClass	string	'swiper-slide'	
Имя класса CSS слайда

При изменении классов вам также потребуется изменить CSS Swiper, чтобы отразить измененные классы.

Не поддерживается в компонентах Swiper React/Vue.

slideNextClass	string	'swiper-slide-next'	
Имя класса слайда CSS, которое находится сразу после текущего активного слайда.

При изменении классов вам также потребуется изменить CSS Swiper, чтобы отразить измененные классы.

Не поддерживается в Swiper React/Vue

slidePrevClass	string	'swiper-slide-prev'	
Имя класса CSS слайда, которое находится прямо перед текущим активным слайдом

При изменении классов вам также потребуется изменить CSS Swiper, чтобы отразить измененные классы.

Не поддерживается в Swiper React/Vue

slideToClickedSlide	boolean	false	
Установите true и нажмите на любой слайд, чтобы перейти к этому слайду

slideVisibleClass	string	'swiper-slide-visible'	
Имя класса CSS текущего видимого слайда

При изменении классов вам также потребуется изменить CSS Swiper, чтобы отразить измененные классы.

Не поддерживается в Swiper React/Vue

slidesOffsetAfter	number	0	
Добавить (в пикселях) дополнительное смещение слайда в конце контейнера (после всех слайдов)

slidesOffsetBefore	number	0	
Добавить (в пикселях) дополнительное смещение слайда в начале контейнера (перед всеми слайдами)

slidesPerGroup	number	1	
Установите количество слайдов, чтобы определить и включить групповое слайдирование. Полезно использовать со слайдами PerView > 1

slidesPerGroupAuto	boolean	false	
Этот параметр предназначен для использования только с slidesPerView: 'auto'и slidesPerGroup: 1. Когда он включен, он будет пропускать все слайды в представлении при вызовах .slideNext()& .slidePrev()методов, при нажатии «кнопок» навигации и при автовоспроизведении.

slidesPerGroupSkip	number	0	
араметр работает следующим образом: если slidesPerGroupSkipон равен 0(по умолчанию), слайды не исключаются из группировки, а результирующее поведение такое же, как и без этого изменения.

Если slidesPerGroupSkipравно или больше, чем 1первые X слайдов, они рассматриваются как отдельные группы, тогда как все последующие слайды группируются по значению slidesPerGroup.

slidesPerView	number | 'auto'	1	
Количество слайдов на просмотр (слайды, видимые одновременно в контейнере слайдера).

slidesPerView: 'auto'в настоящее время не совместим с многострочным режимом, когда grid.rows > 1

spaceBetween	string | number	0	
Расстояние между слайдами в px.

Если вы используете свойство css «margin» для элементов, которые входят в Swiper, в который вы передаете «spaceBetween», навигация может работать неправильно.

speed	number	300	
Длительность перехода между слайдами (в мс)

swipeHandler	null | HTMLElement | CSSSelector	null	
Строка с селектором CSS или элементом HTML контейнера с нумерацией страниц, который будет работать как единственный доступный обработчик для пролистывания.

threshold	number	5	
Пороговое значение в пикселях. Если «расстояние касания» будет ниже этого значения, то свайпер не будет двигаться.

touchAngle	number	45	
Допустимый угол (в градусах) для срабатывания сенсорного движения.

touchEventsTarget	'container' | 'wrapper'	'wrapper'	
Целевой элемент для прослушивания событий касания. Может быть 'container'(для прослушивания сенсорных событий на swiper) или 'wrapper'(для прослушивания сенсорных событий на swiper-wrapper)

touchMoveStopPropagation	boolean	false	
Если включено, распространение «touchmove» будет остановлено.

touchRatio	number	1	
Соотношение касания

touchReleaseOnEdges	boolean	false	
Включите, чтобы отменить сенсорные события в положении края ползунка (начало, конец), чтобы обеспечить дальнейшую прокрутку страницы

touchStartForcePreventDefault	boolean	false	
Принудительно всегда предотвращать значение по умолчанию для события touchstart( )pointerdown

touchStartPreventDefault	boolean	true	
Если отключено, pointerdownсобытие не будет предотвращено

uniqueNavElements	boolean	true	
Если включено (по умолчанию) и параметры элементов навигации передаются в виде строки (например ".pagination"), Swiper сначала будет искать такие элементы через дочерние элементы. Применяется для нумерации страниц, кнопок «предыдущий/следующий» и элементов полосы прокрутки.

updateOnWindowResize	boolean	true	
Swiper будет пересчитывать положение слайдов при изменении размера окна (изменение ориентации)

url	null | string	null	
Требуется для обнаружения активного слайда при рендеринге на стороне сервера и включенной истории

userAgent	null | string	null	
Строка агента пользователя. Требуется для обнаружения браузера/устройства при отображении на стороне сервера

virtualTranslate	boolean	false	
Включите эту опцию, и swiper будет работать как обычно, за исключением того, что он не будет двигаться, реальные значения перевода на обертке не будут установлены. Полезно, когда вам может понадобиться создать собственный переход между слайдами.

watchOverflow	boolean	true	
При включении Swiper будет отключен и скроет кнопки навигации, если слайдов недостаточно для скольжения.

watchSlidesProgress	boolean	false	
Включите эту функцию, чтобы рассчитать прогресс и видимость каждого слайда (слайды в области просмотра будут иметь дополнительный видимый класс)

width	null | number	null	
Ширина пролистывания (в пикселях). Параметр позволяет задать ширину Swiper. Полезно, только если вы инициализируете Swiper, когда он скрыт, а также в средах SSR и Test для правильной инициализации Swiper.

Установка этого параметра приведет к тому, что Swiper не будет реагировать!

wrapperClass	string	'swiper-wrapper'	
Имя класса CSS обертки слайдов

При изменении классов вам также потребуется изменить CSS Swiper, чтобы отразить измененные классы.

Не поддерживается в Swiper React/Vue

onAny	function		
Добавить прослушиватель событий, который будет запускаться для всех событий

const swiper = new Swiper('.swiper', {
   onAny(eventName, ...args) {
     console.log('Event: ', eventName);
     console.log('Event data: ', args);
   }
 });
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Методы и свойства
После того, как мы инициализируем Slider, у нас есть его инициализированный экземпляр в переменной (как swiperпеременная в примере выше) с полезными методами и свойствами:

Характеристики
swiper.activeIndex	число	
Индексный номер текущего активного слайда

Обратите внимание, что в циклическом режиме значение активного индекса всегда будет сдвигаться на несколько зацикленных слайдов.

swiper.allowSlideNext	логический	
Отключить / включить возможность перехода к следующим слайдам, назначив false/ trueэтому свойству

swiper.allowSlidePrev	логический	
Отключить / включить возможность перехода к предыдущим слайдам, назначив false/ trueэтому свойству

swiper.allowTouchMove	логический	
Отключить / включить возможность перемещения ползунка, захватив его мышью или коснувшись пальцем (на сенсорных экранах), назначив false/ trueэтому свойству

swiper.animating	логический	
trueесли swiper находится в переходе

swiper.clickedIndex	число	
Индекс последнего слайда, на который нажали

swiper.clickedSlide	HTMLЭлемент	
Ссылка на слайд, по которому последний раз щелкнули (HTMLElement)

swiper.el	HTMLЭлемент	
HTML-элемент контейнера слайдера

swiper.height	число	
Высота контейнера

swiper.isBeginning	логический	
trueесли ползунок находится в самой «левой»/«верхней» позиции

swiper.isEnd	логический	
trueесли ползунок в самом «правом»/«нижнем» положении

swiper.isLocked	логический	
trueесли слайд «заблокирован» (с помощью watchOverflow), а слайды не могут быть, например, когда количество слайдов меньше, чем слайдов за просмотр

swiper.originalParams	SwiperOptions	
Объект с исходными параметрами инициализации

swiper.params	SwiperOptions	
Объект с переданными параметрами инициализации

swiper.previousIndex	число	
Индексный номер ранее активного слайда

swiper.progress	число	
Текущий прогресс перевода оболочки (от 0 до 1)

swiper.realIndex	число	
Индексный номер текущего активного слайда с учетом переупорядочения слайдов в циклическом режиме

swiper.slides	HTMLЭлемент[]	
Массив HTML-элементов слайдов. Чтобы получить конкретный HTML-элемент слайда, используйтеswiper.slides[1]

swiper.snapGrid	число[]	
Сетка привязки слайдов

swiper.snapIndex	число	
Индексный номер текущей оснасткиsnapGrid

swiper.swipeDirection	'предыдущий' | 'следующий'	
Направление скольжения

swiper.touches	объект	
Объект со следующими свойствами события касания:

swiper.touches.startX
swiper.touches.startY
swiper.touches.currentX
swiper.touches.currentY
swiper.touches.diff
swiper.translate	число	
Текущее значение перевода оболочки

swiper.width	число	
Ширина контейнера

swiper.wrapperEl	HTMLЭлемент	
HTML-элемент-оболочка

swiper.defaults	SwiperOptions	
Параметры Swiper по умолчанию

swiper.extendedDefaults	SwiperOptions	
Объект с глобальными расширенными параметрами Swiper

Методы
swiper.attachEvents()	
Снова прикрепите прослушиватели всех событий

swiper.changeDirection ( направление , needUpdate )	
Изменяет направление ползунка с горизонтального на вертикальное и обратно.

направление - «горизонтальное» | 'вертикаль' - Новое направление. Если не указано, то будет автоматически изменено на противоположное направление
needUpdate - boolean - вызовет swiper.update(). Истина по умолчанию
swiper.changeLanguageDirection ( направление )	
Изменяет язык слайдера

направление - 'rtl' | 'ltr' - Новое направление. Должно быть `rtl` или `ltr`
swiper.destroy( deleteInstance , cleanStyles )	
Уничтожить экземпляр ползунка и отключить все слушатели событий

deleteInstance - логическое значение - установите значение false (по умолчанию это правда), чтобы не удалять экземпляр Swiper.
cleanStyles - boolean - установите значение true (по умолчанию это true), и все пользовательские стили будут удалены из слайдов, обертки и контейнера. Полезно, если вам нужно уничтожить Swiper и снова запустить его с новыми параметрами или в другом направлении.
swiper.detachEvents()	
Отключить все прослушиватели событий

swiper.disable()	
Отключите Swiper (если он был включен). Когда Swiper отключен, он скроет все элементы навигации и не будет реагировать ни на какие события и взаимодействия.

swiper.emit ( событие , аргументы )	
Событие пожара на экземпляре

swiper.enable()	
Включить Swiper (если он был отключен)

swiper.getTranslate ()	
Получить текущее значение преобразования CSS3-оболочки swiper для перевода

swiper.init( эль )	
Инициализировать ползунок

swiper.loopCreate()	
!ВНУТРЕННИЙ

swiper.loopDestroy()	
!ВНУТРЕННИЙ

swiper.off( событие , обработчик )	
Удалить обработчик событий

swiper.offAny( обработчик )	
Удалить прослушиватель событий, который будет запускаться для всех событий

swiper.on( событие , обработчик )	
Добавить обработчик событий

swiper.onAny( обработчик )	
Добавить прослушиватель событий, который будет запускаться для всех событий

swiper.once( событие , обработчик )	
Добавить обработчик события, который будет удален после его запуска

swiper.setGrabCursor()	
Установить курсор захвата

swiper.setProgress( прогресс , скорость )	
Установить прогресс перевода Swiper (от 0 до 1). Где 0 - его начальное положение (смещение) на первом слайде, а 1 - его максимальное положение (смещение) на последнем слайде.

progress - число - прогресс перевода Swiper (от 0 до 1).
скорость - число - длительность перехода (в мс).
swiper.setTranslate( перевести )	
Установите пользовательское значение преобразования css3 для оболочки swiper

swiper.slideNext ( скорость , runCallbacks )	
Выполнить переход к следующему слайду.

скорость - число - длительность перехода (в мс).
runCallbacks - boolean - Установите для него значение false (по умолчанию это true), и переход не будет создавать события перехода.
swiper.slidePrev ( скорость , runCallbacks )	
Выполнить переход к предыдущему слайду.

скорость - число - длительность перехода (в мс).
runCallbacks - boolean - Установите для него значение false (по умолчанию это true), и переход не будет создавать события перехода.
swiper.slideReset ( скорость , runCallbacks )	
Сбросить положение салфетки на текущий активный слайд на время, равное параметру «скорость».

скорость - число - длительность перехода (в мс).
runCallbacks - boolean - Установите для него значение false (по умолчанию это true), и переход не будет создавать события перехода.
swiper.slideTo( индекс , скорость , runCallbacks )	
Выполнить переход к слайду с порядковым номером, равным параметру index, на время, равное параметру speed.

index - number - Индексный номер слайда.
скорость - число - длительность перехода (в мс).
runCallbacks - boolean - Установите для него значение false (по умолчанию это true), и переход не будет создавать события перехода.
swiper.slideToClosest ( скорость , runCallbacks )	
Сбросить положение прокрутки до ближайшей точки слайда/привязки на время, равное параметру «скорость».

скорость - число - длительность перехода (в мс).
runCallbacks - boolean - Установите для него значение false (по умолчанию это true), и переход не будет создавать события перехода.
swiper.slideToLoop( индекс , скорость , runCallbacks )	
Делает то же самое, что и .slideTo, но для случая, когда используется с включенным циклом. Таким образом, этот метод будет скользить к слайдам с реальным индексом, соответствующим переданному индексу.

index - number - Индексный номер слайда.
скорость - число - длительность перехода (в мс).
runCallbacks - boolean - Установите для него значение false (по умолчанию это true), и переход не будет создавать события перехода.
swiper.translateTo ( перевод , скорость , runCallbacks , translateBounds )	
Анимировать значение перевода пользовательского преобразования css3 для оболочки swiper

translate - число - значение перевода (в пикселях)
скорость - число - продолжительность перехода (в мс)
runCallbacks - логическое значение - установите значение false (по умолчанию это правда), и переход не будет создавать события перехода.
translateBounds - boolean - установите для него значение false (по умолчанию это правда), и значение перехода может выходить за пределы минимального и максимального перевода
swiper.unsetGrabCursor()	
Сбросить курсор захвата

swiper.update()	
Вы должны вызывать его после того, как вы добавляете/удаляете слайды вручную, или после того, как вы скрываете/показываете его, или выполняете какие-либо пользовательские модификации DOM с помощью Swiper. Этот метод также включает в себя подвызов следующих методов, которые вы можете использовать отдельно:

swiper.updateAutoHeight ( скорость )	
Заставить swiper обновлять свою высоту (когда включена функция autoHeight) в течение времени, равного параметру «скорость».

скорость - число - длительность перехода (в мс).
swiper.updateProgress()	
пересчитать прогресс swiper

swiper.updateSize()	
пересчитать размер контейнера swiper

swiper.updateSlides()	
пересчитать количество слайдов и их смещения. Полезно после добавления/удаления слайдов с помощью JavaScript

swiper.updateSlidesClasses()	
обновлять активные/предыдущие/следующие классы на слайдах и маркерах

swiper.extendDefaults ( параметры )	
Расширение глобальных настроек Swiper по умолчанию

swiper.use( модули )	
Устанавливает модули на Swiper во время выполнения.
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
События
Swiper поставляется с кучей полезных событий, которые вы можете прослушать. События можно назначать двумя способами:

Использование onпараметра при инициализации swiper:

const swiper = new Swiper('.swiper', {
  // ...
  on: {
    init: function () {
      console.log('swiper initialized');
    },
  },
});
Использование onметода после инициализации swiper.

const swiper = new Swiper('.swiper', {
  // ...
});
swiper.on('slideChange', function () {
  console.log('slide changed');
});
Обратите внимание, что thisключевое слово в обработчике событий всегда указывает на экземпляр Swiper.
Имя	Аргументы	Описание
activeIndexChange	(проведите пальцем)	
Событие будет запущено при изменении активного индекса

afterInit	(проведите пальцем)	
Событие будет запущено сразу после инициализации

beforeDestroy	(проведите пальцем)	
Событие будет запущено прямо перед уничтожением Swiper

beforeInit	(проведите пальцем)	
Событие будет запущено прямо перед инициализацией

beforeLoopFix	(проведите пальцем)	
Событие будет запущено прямо перед «исправлением цикла».

beforeResize	(проведите пальцем)	
Событие будет запущено до обработчика изменения размера

beforeSlideChangeStart	(проведите пальцем)	
Событие будет запущено до начала перехода смены слайда

beforeTransitionStart	(swiper, скорость, внутренний)	
Событие будет запущено до начала перехода

breakpoint	(swiper, breakpointParams)	
Событие будет запущено при изменении точки останова

changeDirection	(проведите пальцем)	
Событие будет запущено при изменении направления

click	(свайп, событие)	
Событие будет запущено, когда пользователь щелкнет / коснется Swiper. Получает touchendсобытие в качестве аргументов.

destroy	(проведите пальцем)	
Событие будет запущено при уничтожении swiper

doubleClick  (свайп, событие)	
Событие будет запущено, когда пользователь дважды щелкнет / коснется Swiper

doubleTap	(свайп, событие)	
Событие будет запущено, когда пользователь дважды коснется контейнера Swiper. Получает touchendсобытие в качестве аргументов

fromEdge	(проведите пальцем)	
Событие будет запущено, когда Swiper выйдет из начальной или конечной позиции

init	(проведите пальцем)	
Запускается сразу после инициализации Swiper.

lock	(проведите пальцем)	
Событие будет запущено, когда swiper заблокирован (если watchOverflowвключено)

loopFix	(проведите пальцем)	
Событие будет запущено после "исправления цикла"

momentumBounce	(проведите пальцем)	
Событие будет запущено при отскоке импульса

observerUpdate	(проведите пальцем)	
Событие будет запущено, если наблюдатель включен и обнаружит мутации DOM.

orientationchange	(проведите пальцем)	
Событие будет запущено при изменении ориентации (например, альбомная -> портретная)

progress	(свайп, прогресс)	
Событие будет запущено при изменении прогресса Swiper, в качестве аргументов он получает прогресс, который всегда от 0 до 1

reachBeginning	(проведите пальцем)	
Событие будет запущено, когда Swiper достигнет своего начала (исходное положение)

reachEnd
	(проведите пальцем)	
Событие будет запущено, когда Swiper достигнет последнего слайда

realIndexChange	(проведите пальцем)	
Событие будет запущено при изменении реального индекса

resize	(проведите пальцем)	
Событие будет запущено при изменении размера окна прямо перед манипуляцией с изменением размера swiper

setTransition	(свайпер, переход)	
Событие будет запускаться каждый раз, когда swiper запускает анимацию. Получает текущую продолжительность перехода (в мс) в качестве аргументов

setTranslate	(пролистни, переведи)	
Событие будет запущено, когда оболочка swiper изменит свое положение. Получает текущее значение перевода в качестве аргументов

slideChange	(проведите пальцем)	
Событие будет запущено при изменении текущего активного слайда

slideChangeTransitionEnd	(проведите пальцем)	
Событие будет запущено после анимации другого слайда (следующего или предыдущего).

slideChangeTransitionStart	(проведите пальцем)	
Событие будет запущено в начале анимации для другого слайда (следующего или предыдущего).

slideNextTransitionEnd	(проведите пальцем)	
То же, что и "slideChangeTransitionEnd", но только для направления "вперед"

slideNextTransitionStart	(проведите пальцем)	
То же, что и "slideChangeTransitionStart", но только для направления "вперед"

slidePrevTransitionEnd	(проведите пальцем)	
То же, что и «slideChangeTransitionEnd», но только для направления «назад»

slidePrevTransitionStart	(проведите пальцем)	
То же, что и "slideChangeTransitionStart", но только для направления "назад"

slideResetTransitionEnd	(проведите пальцем)	
Событие будет запущено в конце анимации сброса слайда на текущий

slideResetTransitionStart	(проведите пальцем)	
Событие будет запущено в начале анимации сброса слайда на текущий

sliderFirstMove	(свайп, событие)	
Событие будет запущено при первом касании/перетаскивании

sliderMove	(свайп, событие)	
Событие будет запущено, когда пользователь коснется и проведет пальцем по Swiper и переместит его. Получает touchmoveсобытие в качестве аргументов.

slidesGridLengthChange	(проведите пальцем)	
Событие будет запущено при изменении сетки слайдов

slidesLengthChange	(проведите пальцем)	
Событие будет запущено при изменении количества слайдов

snapGridLengthChange	(проведите пальцем)	
Событие будет запущено при изменении сетки привязки

snapIndexChange	(проведите пальцем)	
Событие будет запущено при изменении индекса привязки

tap	(свайп, событие)	
Событие будет запущено, когда пользователь щелкнет / коснется Swiper. Получает touchendсобытие в качестве аргументов.

toEdge	(проведите пальцем)	
Событие будет запущено, когда Swiper перейдет в начальную или конечную позицию

touchEnd	(свайп, событие)	
Событие будет запущено, когда пользователь отпустит Swiper. Получает touchendсобытие в качестве аргументов.

touchMove	(свайп, событие)	
Событие будет запущено, когда пользователь коснется и проведет пальцем по Swiper. Получает touchmoveсобытие в качестве аргументов.

touchMoveOpposite	(свайп, событие)	
Событие будет запущено, когда пользователь коснется и проведет пальцем по Swiper в направлении, противоположном параметру направления. Получает touchmoveсобытие в качестве аргументов.

touchStart	(свайп, событие)	
Событие будет запущено, когда пользователь коснется Swiper. Получает touchstartсобытие в качестве аргументов.

transitionEnd	(проведите пальцем)	
Событие будет запущено после перехода.

transitionStart	(проведите пальцем)	
Событие будет запущено в начале перехода.

unlock	(проведите пальцем)	
Событие будет запущено, когда swiper разблокирован (если watchOverflowвключено)

update	(проведите пальцем)	
Событие будет запущено после вызова swiper.update()


